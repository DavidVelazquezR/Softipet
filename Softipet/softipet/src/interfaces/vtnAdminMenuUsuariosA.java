/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import bd.Querys;
import cjb.ci.CtrlInterfaz;
import cjb.ci.Mensaje;
import cjb.ci.Validaciones;
import controladores.cambioColor;
import static interfaces.vtnLogin.con;
import java.awt.AWTException;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.HeadlessException;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.StyledEditorKit;

/**
 *
 * @author david
 */
public class vtnAdminMenuUsuariosA extends javax.swing.JFrame {

    int xy, xx;
    boolean flagMedico = false;
    cambioColor cc = new cambioColor();

    /**
     * Creates new form vtnAdminAU
     */
    public vtnAdminMenuUsuariosA() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLMinimizar = new javax.swing.JLabel();
        jLCerrar = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jCBRol = new javax.swing.JComboBox<>();
        jLTitulo1 = new javax.swing.JLabel();
        jCBSexo = new javax.swing.JComboBox<>();
        jDCFecha = new com.toedter.calendar.JDateChooser();
        jBAlta = new javax.swing.JButton();
        jBLimpiar = new javax.swing.JButton();
        jPNombre = new javax.swing.JPanel();
        jLNombre = new javax.swing.JLabel();
        jTFNombre = new javax.swing.JTextField();
        jPFechaNac = new javax.swing.JPanel();
        jLFechaNac = new javax.swing.JLabel();
        jPAPaterno = new javax.swing.JPanel();
        jLAPaterno = new javax.swing.JLabel();
        jTFAPaterno = new javax.swing.JTextField();
        jPAMaterno = new javax.swing.JPanel();
        jLAMaterno = new javax.swing.JLabel();
        jTFAMaterno = new javax.swing.JTextField();
        jPTelefono = new javax.swing.JPanel();
        jLTelefono = new javax.swing.JLabel();
        jTFTelefono = new javax.swing.JTextField();
        jPEmail = new javax.swing.JPanel();
        jLEmail = new javax.swing.JLabel();
        jTFEmail = new javax.swing.JTextField();
        jPContra = new javax.swing.JPanel();
        jLContra1 = new javax.swing.JLabel();
        jPFContra1 = new javax.swing.JPasswordField();
        jPContra2 = new javax.swing.JPanel();
        jLContra2 = new javax.swing.JLabel();
        jPFContra2 = new javax.swing.JPasswordField();
        jPCurp = new javax.swing.JPanel();
        jLCURP = new javax.swing.JLabel();
        jTFCURP = new javax.swing.JTextField();
        jPSexo = new javax.swing.JPanel();
        jLSexo = new javax.swing.JLabel();
        jPDireccion = new javax.swing.JPanel();
        jLDireccion = new javax.swing.JLabel();
        jTFDireccion = new javax.swing.JTextField();
        jPFacultad = new javax.swing.JPanel();
        jLFacu = new javax.swing.JLabel();
        jTFFacu = new javax.swing.JTextField();
        jPRol = new javax.swing.JPanel();
        jLRol = new javax.swing.JLabel();
        jPCedula = new javax.swing.JPanel();
        jLCedula = new javax.swing.JLabel();
        jTFCedula = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(0, 35));
        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel3MouseDragged(evt);
            }
        });
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLMinimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/minimizar-icon.png"))); // NOI18N
        jLMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLMinimizarMouseClicked(evt);
            }
        });
        jPanel3.add(jLMinimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 0, -1, 40));

        jLCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/regreso.png"))); // NOI18N
        jLCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLCerrarMouseClicked(evt);
            }
        });
        jPanel3.add(jLCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 30, 40));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 40));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCBRol.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCBRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione rol", "Admin", "Medico", "Auxiliar" }));
        jCBRol.setToolTipText("");
        jCBRol.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBRolItemStateChanged(evt);
            }
        });
        jCBRol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCBRolMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jCBRolMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCBRolMouseReleased(evt);
            }
        });
        jCBRol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCBRolKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCBRolKeyReleased(evt);
            }
        });
        jPanel1.add(jCBRol, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 190, 170, -1));

        jLTitulo1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLTitulo1.setText("Alta de usuarios");
        jPanel1.add(jLTitulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        jCBSexo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCBSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione sexo", "Masculino", "Femenino" }));
        jCBSexo.setToolTipText("");
        jCBSexo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBSexoItemStateChanged(evt);
            }
        });
        jCBSexo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCBSexoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jCBSexoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCBSexoMouseReleased(evt);
            }
        });
        jCBSexo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCBSexoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCBSexoKeyReleased(evt);
            }
        });
        jPanel1.add(jCBSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, 170, -1));

        jDCFecha.setDateFormatString("yyyy-MM-d");
        jDCFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDCFechaMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jDCFechaMouseExited(evt);
            }
        });
        jDCFecha.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jDCFechaCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                none(evt);
            }
        });
        jDCFecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDCFechaPropertyChange(evt);
            }
        });
        jDCFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDCFechaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jDCFechaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jDCFechaKeyTyped(evt);
            }
        });
        jDCFecha.getDateEditor().addPropertyChangeListener(new PropertyChangeListener(){
            public void propertyChange(PropertyChangeEvent e) {
                //Aquí agregaremos la funcionalidad que queremos
                //por ejemplo al seleccionar una fecha le mostrare un diálogo con la fecha de hoy
                if (jDCFecha.getDate() == null)
                {
                    cc.cDefault(jPFechaNac, jLFechaNac);
                } else if (jDCFecha.getDate() != null)
                {
                    cc.cVerde(jPFechaNac, jLFechaNac);
                }
            }
        });
        jPanel1.add(jDCFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 400, 170, -1));

        jBAlta.setBackground(new java.awt.Color(153, 255, 153));
        jBAlta.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBAlta.setText("Dar de alta");
        jBAlta.setBorder(null);
        jBAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAltaActionPerformed(evt);
            }
        });
        jBAlta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBAltaKeyPressed(evt);
            }
        });
        jPanel1.add(jBAlta, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 370, 120, 30));

        jBLimpiar.setBackground(new java.awt.Color(153, 153, 255));
        jBLimpiar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBLimpiar.setText("Limpiar");
        jBLimpiar.setBorder(null);
        jBLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(jBLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 410, 120, 30));

        jPNombre.setBackground(new java.awt.Color(255, 255, 255));
        jPNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPNombre.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLNombre.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLNombre.setText("Nombre:");
        jPNombre.add(jLNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFNombre.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFNombre.setBorder(null);
        jTFNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFNombreKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFNombreKeyTyped(evt);
            }
        });
        jPNombre.add(jTFNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 20));

        jPanel1.add(jPNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 190, 60));

        jPFechaNac.setBackground(new java.awt.Color(255, 255, 255));
        jPFechaNac.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPFechaNac.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLFechaNac.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLFechaNac.setText("Fecha de nacimiento:");
        jPFechaNac.add(jLFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel1.add(jPFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 190, 30));

        jPAPaterno.setBackground(new java.awt.Color(255, 255, 255));
        jPAPaterno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPAPaterno.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLAPaterno.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLAPaterno.setText("Apellido paterno:");
        jPAPaterno.add(jLAPaterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFAPaterno.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFAPaterno.setBorder(null);
        jTFAPaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFAPaternoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFAPaternoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFAPaternoKeyTyped(evt);
            }
        });
        jPAPaterno.add(jTFAPaterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 20));

        jPanel1.add(jPAPaterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 190, 60));

        jPAMaterno.setBackground(new java.awt.Color(255, 255, 255));
        jPAMaterno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPAMaterno.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLAMaterno.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLAMaterno.setText("Apellido materno:");
        jPAMaterno.add(jLAMaterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFAMaterno.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFAMaterno.setBorder(null);
        jTFAMaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFAMaternoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFAMaternoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFAMaternoKeyTyped(evt);
            }
        });
        jPAMaterno.add(jTFAMaterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 20));

        jPanel1.add(jPAMaterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 190, 60));

        jPTelefono.setBackground(new java.awt.Color(255, 255, 255));
        jPTelefono.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPTelefono.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLTelefono.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLTelefono.setText("Teléfono:");
        jPTelefono.add(jLTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFTelefono.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFTelefono.setBorder(null);
        jTFTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFTelefonoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFTelefonoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFTelefonoKeyTyped(evt);
            }
        });
        jPTelefono.add(jTFTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 20));

        jPanel1.add(jPTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 190, 60));

        jPEmail.setBackground(new java.awt.Color(255, 255, 255));
        jPEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPEmail.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLEmail.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLEmail.setText("Email:");
        jPEmail.add(jLEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFEmail.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFEmail.setBorder(null);
        jTFEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFEmailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFEmailKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFEmailKeyTyped(evt);
            }
        });
        jPEmail.add(jTFEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 20));

        jPanel1.add(jPEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 190, 60));

        jPContra.setBackground(new java.awt.Color(255, 255, 255));
        jPContra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPContra.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLContra1.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLContra1.setText("Contraseña:");
        jPContra.add(jLContra1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPFContra1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jPFContra1.setBorder(null);
        jPFContra1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPFContra1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPFContra1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPFContra1KeyTyped(evt);
            }
        });
        jPContra.add(jPFContra1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 20));

        jPanel1.add(jPContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 190, 60));

        jPContra2.setBackground(new java.awt.Color(255, 255, 255));
        jPContra2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPContra2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLContra2.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLContra2.setText("Confirme contraseña:");
        jPContra2.add(jLContra2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPFContra2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jPFContra2.setBorder(null);
        jPFContra2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPFContra2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPFContra2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPFContra2KeyTyped(evt);
            }
        });
        jPContra2.add(jPFContra2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 20));

        jPanel1.add(jPContra2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, 190, 60));

        jPCurp.setBackground(new java.awt.Color(255, 255, 255));
        jPCurp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPCurp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLCURP.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLCURP.setText("CURP:");
        jPCurp.add(jLCURP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFCURP.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFCURP.setBorder(null);
        jTFCURP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCURPActionPerformed(evt);
            }
        });
        jTFCURP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFCURPKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFCURPKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFCURPKeyTyped(evt);
            }
        });
        jPCurp.add(jTFCURP, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 20));

        jPanel1.add(jPCurp, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 220, 190, 60));

        jPSexo.setBackground(new java.awt.Color(255, 255, 255));
        jPSexo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPSexo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLSexo.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLSexo.setText("Sexo:");
        jPSexo.add(jLSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel1.add(jPSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, 190, 30));

        jPDireccion.setBackground(new java.awt.Color(255, 255, 255));
        jPDireccion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPDireccion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLDireccion.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLDireccion.setText("Dirección:");
        jPDireccion.add(jLDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFDireccion.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFDireccion.setBorder(null);
        jTFDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFDireccionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFDireccionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFDireccionKeyTyped(evt);
            }
        });
        jPDireccion.add(jTFDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 20));

        jPanel1.add(jPDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, 190, 60));

        jPFacultad.setBackground(new java.awt.Color(255, 255, 255));
        jPFacultad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPFacultad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPFacultadMouseEntered(evt);
            }
        });
        jPFacultad.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLFacu.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLFacu.setText("Facultad de egreso:");
        jLFacu.setEnabled(false);
        jPFacultad.add(jLFacu, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFFacu.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFFacu.setBorder(null);
        jTFFacu.setEnabled(false);
        jTFFacu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFFacuKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFFacuKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFFacuKeyTyped(evt);
            }
        });
        jPFacultad.add(jTFFacu, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 20));

        jPanel1.add(jPFacultad, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 290, 190, 60));

        jPRol.setBackground(new java.awt.Color(255, 255, 255));
        jPRol.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPRol.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLRol.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLRol.setText("Rol:");
        jPRol.add(jLRol, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel1.add(jPRol, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 150, 190, 30));

        jPCedula.setBackground(new java.awt.Color(255, 255, 255));
        jPCedula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPCedula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPCedulaMouseEntered(evt);
            }
        });
        jPCedula.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLCedula.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLCedula.setText("Cedula:");
        jLCedula.setEnabled(false);
        jPCedula.add(jLCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFCedula.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFCedula.setBorder(null);
        jTFCedula.setEnabled(false);
        jTFCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFCedulaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFCedulaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFCedulaKeyTyped(evt);
            }
        });
        jPCedula.add(jTFCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 20));

        jPanel1.add(jPCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 220, 190, 60));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 800, 480));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLMinimizarMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLMinimizarMouseClicked
    {//GEN-HEADEREND:event_jLMinimizarMouseClicked
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_jLMinimizarMouseClicked

    private void jLCerrarMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLCerrarMouseClicked
    {//GEN-HEADEREND:event_jLCerrarMouseClicked
        this.dispose();
        new vtnAdminMenuUsuarios().setVisible(true);
    }//GEN-LAST:event_jLCerrarMouseClicked

    private void jPanel3MouseDragged(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jPanel3MouseDragged
    {//GEN-HEADEREND:event_jPanel3MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_jPanel3MouseDragged

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jPanel3MousePressed
    {//GEN-HEADEREND:event_jPanel3MousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_jPanel3MousePressed

    private void jBLimpiarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jBLimpiarActionPerformed
    {//GEN-HEADEREND:event_jBLimpiarActionPerformed
        CtrlInterfaz.limpia(jTFNombre, jTFAPaterno, jTFAMaterno, jTFTelefono,
                jTFEmail, jTFCURP, jPFContra1, jPFContra2, jTFDireccion, jDCFecha,
                jCBRol, jTFCedula, jTFFacu);
        jCBSexo.setSelectedIndex(0);
        jCBRol.setSelectedIndex(0);

        cc.cDefault(jLNombre, jLAPaterno, jLAMaterno, jLTelefono, jLEmail, jLContra1,
                jLContra2, jLSexo, jLCURP, jLFechaNac, jLDireccion, jLRol, jLCedula, jLFacu);

        cc.cDefault(jTFNombre, jTFAPaterno, jTFAMaterno, jTFTelefono, jTFEmail, jPFContra1,
                jPFContra2, jCBSexo, jTFCURP, jDCFecha, jTFDireccion, jCBRol, jTFCedula, jTFFacu);

        cc.cDefault(jPNombre, jPAPaterno, jPAMaterno, jPTelefono, jPEmail, jPContra,
                jPContra2, jPSexo, jPCurp, jPFechaNac, jPDireccion, jPRol, jPCedula, jPFacultad);

        cc.cDisable(jTFCedula, jLCedula, jPCedula, jTFFacu, jLFacu, jPFacultad);

        jLCedula.setEnabled(false);
        jLFacu.setEnabled(false);
        jTFCedula.setEnabled(false);
        jTFFacu.setEnabled(false);
    }//GEN-LAST:event_jBLimpiarActionPerformed

    private void jTFCURPKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFCURPKeyTyped
    {//GEN-HEADEREND:event_jTFCURPKeyTyped
        Validaciones.validaAlfanumerico(evt);
        if (jTFCURP.getText().length() == 18) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFCURPKeyTyped

    private void jTFNombreKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFNombreKeyTyped
    {//GEN-HEADEREND:event_jTFNombreKeyTyped
        Validaciones.validaAlfabeticos(evt);
        if (jTFNombre.getText().length() == 30) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFNombreKeyTyped

    private void jTFNombreKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFNombreKeyPressed
    {//GEN-HEADEREND:event_jTFNombreKeyPressed

    }//GEN-LAST:event_jTFNombreKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        CtrlInterfaz.selecciona(jTFNombre);
        cc.cDisable(jTFCedula, jLCedula, jPCedula, jTFFacu, jLFacu, jPFacultad);
    }//GEN-LAST:event_formWindowOpened

    private void jTFAPaternoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFAPaternoKeyPressed
    {//GEN-HEADEREND:event_jTFAPaternoKeyPressed

    }//GEN-LAST:event_jTFAPaternoKeyPressed

    private void jTFAPaternoKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFAPaternoKeyTyped
    {//GEN-HEADEREND:event_jTFAPaternoKeyTyped
        Validaciones.validaAlfabeticos(evt);
        if (jTFAPaterno.getText().length() == 30) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFAPaternoKeyTyped

    private void jTFAMaternoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFAMaternoKeyPressed
    {//GEN-HEADEREND:event_jTFAMaternoKeyPressed

    }//GEN-LAST:event_jTFAMaternoKeyPressed

    private void jTFAMaternoKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFAMaternoKeyTyped
    {//GEN-HEADEREND:event_jTFAMaternoKeyTyped
        Validaciones.validaAlfabeticos(evt);
        if (jTFAMaterno.getText().length() == 30) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFAMaternoKeyTyped

    private void jTFTelefonoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFTelefonoKeyPressed
    {//GEN-HEADEREND:event_jTFTelefonoKeyPressed

    }//GEN-LAST:event_jTFTelefonoKeyPressed

    private void jTFTelefonoKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFTelefonoKeyTyped
    {//GEN-HEADEREND:event_jTFTelefonoKeyTyped
        Validaciones.validaEntero(evt);
        if (jTFTelefono.getText().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFTelefonoKeyTyped

    private void jTFEmailKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFEmailKeyPressed
    {//GEN-HEADEREND:event_jTFEmailKeyPressed

    }//GEN-LAST:event_jTFEmailKeyPressed

    private void jTFEmailKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFEmailKeyTyped
    {//GEN-HEADEREND:event_jTFEmailKeyTyped
        if (jTFEmail.getText().length() == 30) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFEmailKeyTyped

    private void jTFCURPKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFCURPKeyPressed
    {//GEN-HEADEREND:event_jTFCURPKeyPressed

    }//GEN-LAST:event_jTFCURPKeyPressed

    private void jCBSexoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jCBSexoKeyPressed
    {//GEN-HEADEREND:event_jCBSexoKeyPressed
        Validaciones.enter(this, evt, jDCFecha);
    }//GEN-LAST:event_jCBSexoKeyPressed

    private void jDCFechaKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jDCFechaKeyPressed
    {//GEN-HEADEREND:event_jDCFechaKeyPressed
        Validaciones.enter(this, evt, jTFDireccion);
    }//GEN-LAST:event_jDCFechaKeyPressed

    private void jDCFechaKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jDCFechaKeyTyped
    {//GEN-HEADEREND:event_jDCFechaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jDCFechaKeyTyped

    private void jTFDireccionKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFDireccionKeyPressed
    {//GEN-HEADEREND:event_jTFDireccionKeyPressed

    }//GEN-LAST:event_jTFDireccionKeyPressed

    private void jTFDireccionKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFDireccionKeyTyped
    {//GEN-HEADEREND:event_jTFDireccionKeyTyped
        Validaciones.validaAlfanumerico(evt);
        if (jTFDireccion.getText().length() == 180) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFDireccionKeyTyped

    private void jBAltaKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jBAltaKeyPressed
    {//GEN-HEADEREND:event_jBAltaKeyPressed
        if (evt.getKeyChar() == '\n') {
            jBAltaActionPerformed(null);
        }
    }//GEN-LAST:event_jBAltaKeyPressed

    private void jBAltaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jBAltaActionPerformed
    {//GEN-HEADEREND:event_jBAltaActionPerformed
        Querys q = new Querys();
        ArrayList<Object> id = new ArrayList<Object>();
        ArrayList<Object> id2 = new ArrayList<Object>();
        int rol;

        if (flagMedico) {
            if (jLNombre.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLAPaterno.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLAMaterno.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLTelefono.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLEmail.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLContra1.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLContra2.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLCURP.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLSexo.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLFechaNac.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLDireccion.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLRol.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLCedula.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLFacu.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()) {
                try {
                    id = q.Seleccion(con, "MAX(Id_empleado)", "usuarios", "", true);
                    id2 = q.Seleccion(con, "MAX(Folio)", "medicos", "", true);
                } catch (Exception e) {
                    System.out.println("consulta max id erronea" + e);
                    System.out.println("consulta max id2 erronea" + e);
                }

                int idFinal = Integer.parseInt((String) id.get(0)) + 1;
                System.out.println("Tamaño del id2" + id2.size());
                String values2 = "";
                if (id2.get(0).equals("null")) {
                    values2 = "'" + 1 + "',"
                            + "'" + idFinal + "',"
                            + "'" + jTFCedula.getText() + "',"
                            + "'" + jTFFacu.getText() + "'";

                } else {
                    int idFinal2 = Integer.parseInt((String) id2.get(0)) + 1;
                    values2 = "'" + idFinal2 + "',"
                            + "'" + idFinal + "',"
                            + "'" + jTFCedula.getText() + "',"
                            + "'" + jTFFacu.getText() + "'";
                }

                Date fecha1 = jDCFecha.getDate();

                DateFormat f = new SimpleDateFormat("yyyy-MM-dd");

                String fecha2 = f.format(fecha1);

                String values = "'" + idFinal + "',"
                        + "'" + jTFNombre.getText() + "',"
                        + "'" + jTFAPaterno.getText() + "',"
                        + "'" + jTFAMaterno.getText() + "',"
                        + "'" + jTFTelefono.getText() + "',"
                        + "'" + jTFEmail.getText() + "',"
                        + "'" + jPFContra2.getText() + "',"
                        + "'" + jTFCURP.getText() + "',"
                        + "'" + (String) jCBSexo.getSelectedItem() + "',"
                        + "'" + fecha2 + "',"
                        + "'" + jTFDireccion.getText() + "',"
                        + "'" + jCBRol.getSelectedIndex() + "'";

                if (Mensaje.pregunta(this, "¿Estas seguro de dar de alta al usuario?") == JOptionPane.YES_OPTION) {
                    try {
                        q.Insertar(con, "usuarios", values);
                        q.Insertar(con, "medicos", values2);
                    } catch (Exception e) {
                        System.out.println("insercion erronea" + e);
                    }

                    Mensaje.exito(this, "Se inserto el usuario correctamente");
                    jBLimpiarActionPerformed(null);
                } else {
                    Mensaje.error(this, "No se hizo insercion");
                }

            } else {
                Mensaje.error(this, "Verifique que todos los campos esten en verde");
            }
        } else {
            if (jLNombre.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLAPaterno.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLAMaterno.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLTelefono.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLEmail.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLContra1.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLContra2.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLCURP.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLSexo.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLFechaNac.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLDireccion.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                    && jLRol.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()) {
                try {
                    id = q.Seleccion(con, "MAX(Id_empleado)", "usuarios", "", true);
                } catch (Exception e) {
                    System.out.println("consulta max id erronea" + e);
                }

                int idFinal = Integer.parseInt((String) id.get(0)) + 1;
                Date fecha1 = jDCFecha.getDate();
                DateFormat f = new SimpleDateFormat("yyyy-MM-dd");
                String fecha2 = f.format(fecha1);

                String values = "'" + idFinal + "',"
                        + "'" + jTFNombre.getText() + "',"
                        + "'" + jTFAPaterno.getText() + "',"
                        + "'" + jTFAMaterno.getText() + "',"
                        + "'" + jTFTelefono.getText() + "',"
                        + "'" + jTFEmail.getText() + "',"
                        + "'" + jPFContra2.getText() + "',"
                        + "'" + jTFCURP.getText() + "',"
                        + "'" + (String) jCBSexo.getSelectedItem() + "',"
                        + "'" + fecha2 + "',"
                        + "'" + jTFDireccion.getText() + "',"
                        + "'" + jCBRol.getSelectedIndex() + "'";

                if (Mensaje.pregunta(this, "¿Estas seguro de dar de alta al usuario?") == JOptionPane.YES_OPTION) {
                    try {
                        q.Insertar(con, "usuarios", values);
                    } catch (Exception e) {
                        System.out.println("insercion erronea" + e);
                    }

                    Mensaje.exito(this, "Se inserto el usuario correctamente");
                    jBLimpiarActionPerformed(null);
                } else {
                    Mensaje.error(this, "No se hizo insercion");
                }

            } else {
                Mensaje.error(this, "Verifique que todos los campos esten en verde");
            }
        }

    }//GEN-LAST:event_jBAltaActionPerformed

    private void jPFContra1KeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jPFContra1KeyPressed
    {//GEN-HEADEREND:event_jPFContra1KeyPressed

    }//GEN-LAST:event_jPFContra1KeyPressed

    private void jPFContra2KeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jPFContra2KeyPressed
    {//GEN-HEADEREND:event_jPFContra2KeyPressed

    }//GEN-LAST:event_jPFContra2KeyPressed

    private void jPFContra1KeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jPFContra1KeyTyped
    {//GEN-HEADEREND:event_jPFContra1KeyTyped
        if (jPFContra1.getText().length() == 30) {
            evt.consume();
        }
    }//GEN-LAST:event_jPFContra1KeyTyped

    private void jPFContra2KeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jPFContra2KeyTyped
    {//GEN-HEADEREND:event_jPFContra2KeyTyped

        if (jPFContra2.getText().length() == 30) {
            evt.consume();
        }
    }//GEN-LAST:event_jPFContra2KeyTyped

    private void jPFContra2KeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jPFContra2KeyReleased
    {//GEN-HEADEREND:event_jPFContra2KeyReleased
        if (jPFContra2.getText().isEmpty()) {
            cc.cDefault(jPFContra2, jLContra2, jPContra2);
        } else if (jPFContra2.getText().equals(jPFContra1.getText())) {
            cc.cVerde(jPFContra2, jLContra2, jPContra2);
            Validaciones.enter(this, evt, jTFCURP);
        } else {
            cc.cRojo(jPFContra2, jLContra2, jPContra2);
        }
    }//GEN-LAST:event_jPFContra2KeyReleased

    private void jTFTelefonoKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFTelefonoKeyReleased
    {//GEN-HEADEREND:event_jTFTelefonoKeyReleased
        if (jTFTelefono.getText().isEmpty()) {
            cc.cDefault(jTFTelefono, jLTelefono, jPTelefono);
        } else if (jTFTelefono.getText().length() == 10) {
            cc.cVerde(jTFTelefono, jLTelefono, jPTelefono);
            Validaciones.enter(this, evt, jTFEmail);
        } else {
            cc.cRojo(jTFTelefono, jLTelefono, jPTelefono);
        }
    }//GEN-LAST:event_jTFTelefonoKeyReleased

    private void formWindowStateChanged(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowStateChanged
    {//GEN-HEADEREND:event_formWindowStateChanged

    }//GEN-LAST:event_formWindowStateChanged

    private void jTFNombreKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFNombreKeyReleased
    {//GEN-HEADEREND:event_jTFNombreKeyReleased
        if (jTFNombre.getText().isEmpty()) {
            cc.cDefault(jTFNombre, jLNombre, jPNombre);
        } else {
            cc.cVerde(jTFNombre, jLNombre, jPNombre);
            Validaciones.enter(this, evt, jTFAPaterno);
        }
    }//GEN-LAST:event_jTFNombreKeyReleased

    private void jTFAPaternoKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFAPaternoKeyReleased
    {//GEN-HEADEREND:event_jTFAPaternoKeyReleased
        if (jTFAPaterno.getText().isEmpty()) {
            cc.cDefault(jTFAPaterno, jLAPaterno, jPAPaterno);
        } else {
            cc.cVerde(jTFAPaterno, jLAPaterno, jPAPaterno);
            Validaciones.enter(this, evt, jTFAMaterno);
        }
    }//GEN-LAST:event_jTFAPaternoKeyReleased

    private void jTFAMaternoKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFAMaternoKeyReleased
    {//GEN-HEADEREND:event_jTFAMaternoKeyReleased

        if (jTFAMaterno.getText().isEmpty()) {
            cc.cDefault(jTFAMaterno, jLAMaterno, jPAMaterno);
        } else {
            cc.cVerde(jTFAMaterno, jLAMaterno, jPAMaterno);
            Validaciones.enter(this, evt, jTFTelefono);
        }
    }//GEN-LAST:event_jTFAMaternoKeyReleased

    private void jTFEmailKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFEmailKeyReleased
    {//GEN-HEADEREND:event_jTFEmailKeyReleased
        ArrayList<Object> consultaEmail = new ArrayList<Object>();;
        Querys q = new Querys();
        try {
            consultaEmail = q.Seleccion(con, "Email", "usuarios", "Email='" + jTFEmail.getText() + "'", true);

        } catch (Exception e) {
            System.out.println("Error: exception ->" + e);
        }
        if (jTFEmail.getText().isEmpty()) {
            cc.cDefault(jTFEmail, jLEmail, jPEmail);
        } else if (jTFEmail.getText().matches("^[^@]+@[^@]+\\.[a-zA-Z]{2,}$")) {
            Validaciones.enter(this, evt, jPFContra1);
            cc.cVerde(jTFEmail, jLEmail, jPEmail);
        } else {
            cc.cRojo(jTFEmail, jLEmail, jPEmail);
        }
        try {

            if (consultaEmail.get(0).equals(jTFEmail.getText())) {
                cc.cAmarillo(jTFEmail, jLEmail, jPEmail);
            }

        } catch (Exception e) {
            System.out.println("no encontro resultado al mail aun-->" + e);
        }

    }//GEN-LAST:event_jTFEmailKeyReleased

    private void jPFContra1KeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jPFContra1KeyReleased
    {//GEN-HEADEREND:event_jPFContra1KeyReleased
        if (jPFContra1.getText().isEmpty()) {
            cc.cDefault(jPFContra1, jLContra1, jPContra);
        } else if (jPFContra1.getText().length() >= 8) {
            cc.cVerde(jPFContra1, jLContra1, jPContra);
            Validaciones.enter(this, evt, jPFContra2);
        } else {
            cc.cRojo(jPFContra1, jLContra1, jPContra);
        }
    }//GEN-LAST:event_jPFContra1KeyReleased

    private void jTFCURPKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFCURPKeyReleased
    {//GEN-HEADEREND:event_jTFCURPKeyReleased
        ArrayList<Object> consultaCURP = new ArrayList<Object>();;
        Querys q = new Querys();

        try {
            consultaCURP = q.Seleccion(con, "CURP", "usuarios", "CURP='" + jTFCURP.getText() + "'", true);

        } catch (Exception e) {
            System.out.println("Error: exception ->" + e);
        }

        jTFCURP.setText(jTFCURP.getText().toUpperCase());

        if (jTFCURP.getText().isEmpty()) {
            cc.cDefault(jTFCURP, jLCURP, jPCurp);
        } else if (jTFCURP.getText().length() == 18) {
            cc.cVerde(jTFCURP, jLCURP, jPCurp);
            Validaciones.enter(this, evt, jCBSexo);
        } else {
            cc.cRojo(jTFCURP, jLCURP, jPCurp);
        }

        try {

            if (consultaCURP.get(0).equals(jTFCURP.getText())) {
                cc.cAmarillo(jTFCURP, jLCURP, jPCurp);
            }

        } catch (Exception e) {
            System.out.println("no encontro resultado el curp aun-->" + e);
        }
    }//GEN-LAST:event_jTFCURPKeyReleased

    private void jCBSexoKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jCBSexoKeyReleased
    {//GEN-HEADEREND:event_jCBSexoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBSexoKeyReleased

    private void jCBSexoMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jCBSexoMouseReleased
    {//GEN-HEADEREND:event_jCBSexoMouseReleased

    }//GEN-LAST:event_jCBSexoMouseReleased

    private void jCBSexoMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jCBSexoMouseClicked
    {//GEN-HEADEREND:event_jCBSexoMouseClicked

    }//GEN-LAST:event_jCBSexoMouseClicked

    private void jCBSexoMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jCBSexoMousePressed
    {//GEN-HEADEREND:event_jCBSexoMousePressed

    }//GEN-LAST:event_jCBSexoMousePressed

    private void jCBSexoItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jCBSexoItemStateChanged
    {//GEN-HEADEREND:event_jCBSexoItemStateChanged
        if (jCBSexo.getSelectedIndex() == 0) {
            cc.cDefault(jLSexo, jPSexo);
        } else if (jCBSexo.getSelectedIndex() == 1 || jCBSexo.getSelectedIndex() == 2) {
            cc.cVerde(jLSexo, jPSexo);
        }
    }//GEN-LAST:event_jCBSexoItemStateChanged

    private void jDCFechaKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jDCFechaKeyReleased
    {//GEN-HEADEREND:event_jDCFechaKeyReleased

    }//GEN-LAST:event_jDCFechaKeyReleased

    private void none(java.awt.event.InputMethodEvent evt)//GEN-FIRST:event_none
    {//GEN-HEADEREND:event_none

    }//GEN-LAST:event_none

    private void jDCFechaPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_jDCFechaPropertyChange
    {//GEN-HEADEREND:event_jDCFechaPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jDCFechaPropertyChange

    private void jDCFechaCaretPositionChanged(java.awt.event.InputMethodEvent evt)//GEN-FIRST:event_jDCFechaCaretPositionChanged
    {//GEN-HEADEREND:event_jDCFechaCaretPositionChanged

    }//GEN-LAST:event_jDCFechaCaretPositionChanged

    private void jDCFechaMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jDCFechaMouseExited
    {//GEN-HEADEREND:event_jDCFechaMouseExited

    }//GEN-LAST:event_jDCFechaMouseExited

    private void jDCFechaMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jDCFechaMouseClicked
    {//GEN-HEADEREND:event_jDCFechaMouseClicked

    }//GEN-LAST:event_jDCFechaMouseClicked

    private void jTFDireccionKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFDireccionKeyReleased
    {//GEN-HEADEREND:event_jTFDireccionKeyReleased
        if (jTFDireccion.getText().isEmpty()) {
            cc.cDefault(jLDireccion, jTFDireccion, jPDireccion);
        } else {
            cc.cVerde(jLDireccion, jTFDireccion, jPDireccion);
            Validaciones.enter(this, evt, jCBRol);
        }
    }//GEN-LAST:event_jTFDireccionKeyReleased

    private void jCBRolItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jCBRolItemStateChanged
    {//GEN-HEADEREND:event_jCBRolItemStateChanged
        if (jCBRol.getSelectedIndex() == 0) {
            jLCedula.setEnabled(false);
            jLFacu.setEnabled(false);
            jTFCedula.setEnabled(false);
            jTFFacu.setEnabled(false);
            jTFCedula.setText("");
            jTFFacu.setText("");

            flagMedico = false;

            cc.cDefault(jLRol, jPRol);
            cc.cDisable(jTFCedula, jLCedula, jPCedula, jTFFacu, jLFacu, jPFacultad);

        } else if (jCBRol.getSelectedIndex() == 2) {
            jLCedula.setEnabled(true);
            jLFacu.setEnabled(true);
            jTFCedula.setEnabled(true);
            jTFFacu.setEnabled(true);

            flagMedico = true;

            CtrlInterfaz.selecciona(jTFCedula);
            cc.cDefault(jTFCedula, jLCedula, jPCedula, jTFFacu, jLFacu, jPFacultad);
            cc.cVerde(jLRol, jPRol);
        } else if (jCBRol.getSelectedIndex() == 1 || jCBRol.getSelectedIndex() == 3) {
            jLCedula.setEnabled(false);
            jLFacu.setEnabled(false);
            jTFCedula.setEnabled(false);
            jTFFacu.setEnabled(false);
            jTFCedula.setText("");
            jTFFacu.setText("");

            flagMedico = false;

            cc.cVerde(jLRol, jPRol);
            cc.cDisable(jTFCedula, jLCedula, jPCedula, jTFFacu, jLFacu, jPFacultad);
        }
    }//GEN-LAST:event_jCBRolItemStateChanged

    private void jCBRolMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jCBRolMouseClicked
    {//GEN-HEADEREND:event_jCBRolMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBRolMouseClicked

    private void jCBRolMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jCBRolMousePressed
    {//GEN-HEADEREND:event_jCBRolMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBRolMousePressed

    private void jCBRolMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jCBRolMouseReleased
    {//GEN-HEADEREND:event_jCBRolMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBRolMouseReleased

    private void jCBRolKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jCBRolKeyPressed
    {//GEN-HEADEREND:event_jCBRolKeyPressed
        Validaciones.enter(this, evt, jBAlta);
    }//GEN-LAST:event_jCBRolKeyPressed

    private void jCBRolKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jCBRolKeyReleased
    {//GEN-HEADEREND:event_jCBRolKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBRolKeyReleased

    private void jTFCURPActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTFCURPActionPerformed
    {//GEN-HEADEREND:event_jTFCURPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCURPActionPerformed

    private void jTFCedulaKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFCedulaKeyPressed
    {//GEN-HEADEREND:event_jTFCedulaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCedulaKeyPressed

    private void jTFCedulaKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFCedulaKeyReleased
    {//GEN-HEADEREND:event_jTFCedulaKeyReleased
        if (jTFCedula.getText().isEmpty()) {
            cc.cDefault(jLCedula, jTFCedula, jPCedula);
        } else if (jTFCedula.getText().length() == 8) {
            cc.cVerde(jLCedula, jTFCedula, jPCedula);
            Validaciones.enter(this, evt, jTFFacu);
        } else {
            cc.cRojo(jLCedula, jTFCedula, jPCedula);
        }
    }//GEN-LAST:event_jTFCedulaKeyReleased

    private void jTFCedulaKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFCedulaKeyTyped
    {//GEN-HEADEREND:event_jTFCedulaKeyTyped
        Validaciones.validaAlfanumerico(evt);
        if (jTFCedula.getText().length() == 8) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFCedulaKeyTyped

    private void jTFFacuKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFFacuKeyPressed
    {//GEN-HEADEREND:event_jTFFacuKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFFacuKeyPressed

    private void jTFFacuKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFFacuKeyReleased
    {//GEN-HEADEREND:event_jTFFacuKeyReleased
        if (jTFFacu.getText().isEmpty()) {
            cc.cDefault(jLFacu, jTFFacu, jPFacultad);
        } else {
            cc.cVerde(jLFacu, jTFFacu, jPFacultad);
            Validaciones.enter(this, evt, jBAlta);
        }
    }//GEN-LAST:event_jTFFacuKeyReleased

    private void jTFFacuKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFFacuKeyTyped
    {//GEN-HEADEREND:event_jTFFacuKeyTyped
        Validaciones.validaAlfanumerico(evt);
        if (jTFFacu.getText().length() == 30) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFFacuKeyTyped

    private void jPCedulaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPCedulaMouseEntered
        if (!jTFCedula.isEnabled()) {
            try {
                jPCedula.setCursor(Cursor.getSystemCustomCursor("Invalid.32x32"));
            } catch (AWTException ex) {
                Logger.getLogger(vtnAdminMenuUsuariosA.class.getName()).log(Level.SEVERE, null, ex);
            } catch (HeadlessException ex) {
                Logger.getLogger(vtnAdminMenuUsuariosA.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            jPCedula.setCursor(Cursor.getDefaultCursor());
        }

    }//GEN-LAST:event_jPCedulaMouseEntered

    private void jPFacultadMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPFacultadMouseEntered
        if (!jTFFacu.isEnabled()) {
            try {
                jPFacultad.setCursor(Cursor.getSystemCustomCursor("Invalid.32x32"));
            } catch (AWTException ex) {
                Logger.getLogger(vtnAdminMenuUsuariosA.class.getName()).log(Level.SEVERE, null, ex);
            } catch (HeadlessException ex) {
                Logger.getLogger(vtnAdminMenuUsuariosA.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            jPFacultad.setCursor(Cursor.getDefaultCursor());
        }
    }//GEN-LAST:event_jPFacultadMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vtnAdminMenuUsuariosA.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vtnAdminMenuUsuariosA.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vtnAdminMenuUsuariosA.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vtnAdminMenuUsuariosA.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vtnAdminMenuUsuariosA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlta;
    private javax.swing.JButton jBLimpiar;
    private javax.swing.JComboBox<String> jCBRol;
    private javax.swing.JComboBox<String> jCBSexo;
    private com.toedter.calendar.JDateChooser jDCFecha;
    private javax.swing.JLabel jLAMaterno;
    private javax.swing.JLabel jLAPaterno;
    private javax.swing.JLabel jLCURP;
    private javax.swing.JLabel jLCedula;
    private javax.swing.JLabel jLCerrar;
    private javax.swing.JLabel jLContra1;
    private javax.swing.JLabel jLContra2;
    private javax.swing.JLabel jLDireccion;
    private javax.swing.JLabel jLEmail;
    private javax.swing.JLabel jLFacu;
    private javax.swing.JLabel jLFechaNac;
    private javax.swing.JLabel jLMinimizar;
    private javax.swing.JLabel jLNombre;
    private javax.swing.JLabel jLRol;
    private javax.swing.JLabel jLSexo;
    private javax.swing.JLabel jLTelefono;
    private javax.swing.JLabel jLTitulo1;
    private javax.swing.JPanel jPAMaterno;
    private javax.swing.JPanel jPAPaterno;
    private javax.swing.JPanel jPCedula;
    private javax.swing.JPanel jPContra;
    private javax.swing.JPanel jPContra2;
    private javax.swing.JPanel jPCurp;
    private javax.swing.JPanel jPDireccion;
    private javax.swing.JPanel jPEmail;
    private javax.swing.JPasswordField jPFContra1;
    private javax.swing.JPasswordField jPFContra2;
    private javax.swing.JPanel jPFacultad;
    private javax.swing.JPanel jPFechaNac;
    private javax.swing.JPanel jPNombre;
    private javax.swing.JPanel jPRol;
    private javax.swing.JPanel jPSexo;
    private javax.swing.JPanel jPTelefono;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTFAMaterno;
    private javax.swing.JTextField jTFAPaterno;
    private javax.swing.JTextField jTFCURP;
    private javax.swing.JTextField jTFCedula;
    private javax.swing.JTextField jTFDireccion;
    private javax.swing.JTextField jTFEmail;
    private javax.swing.JTextField jTFFacu;
    private javax.swing.JTextField jTFNombre;
    private javax.swing.JTextField jTFTelefono;
    // End of variables declaration//GEN-END:variables
}
