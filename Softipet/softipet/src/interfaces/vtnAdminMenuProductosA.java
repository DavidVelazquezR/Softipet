/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import bd.Querys;
import cjb.ci.CtrlInterfaz;
import cjb.ci.Mensaje;
import cjb.ci.Validaciones;
import controladores.cambioColor;
import static interfaces.vtnLogin.con;
import java.awt.AWTException;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.StyledEditorKit;

/**
 *
 * @author david
 */
public class vtnAdminMenuProductosA extends javax.swing.JFrame {

    int xy, xx;
    cambioColor cc = new cambioColor();

    /**
     * Creates new form vtnAdminAU
     */
    public vtnAdminMenuProductosA() {
        initComponents();
        try {
            jPPrecioP.setCursor(Cursor.getSystemCustomCursor("Invalid.32x32"));
        } catch (AWTException ex) {
            Logger.getLogger(vtnAdminMenuUsuariosA.class.getName()).log(Level.SEVERE, null, ex);
        } catch (HeadlessException ex) {
            Logger.getLogger(vtnAdminMenuUsuariosA.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLMinimizar = new javax.swing.JLabel();
        jLCerrar = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLTitulo1 = new javax.swing.JLabel();
        jBAlta = new javax.swing.JButton();
        jBLimpia = new javax.swing.JButton();
        jPNombreG = new javax.swing.JPanel();
        jLNombreG = new javax.swing.JLabel();
        jTFNombreG = new javax.swing.JTextField();
        jPDesc = new javax.swing.JPanel();
        jLDesc = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTADesc = new javax.swing.JTextArea();
        jPNombreC = new javax.swing.JPanel();
        jLNombreC = new javax.swing.JLabel();
        jTFNombreC = new javax.swing.JTextField();
        jPFechaC = new javax.swing.JPanel();
        jLCaduc = new javax.swing.JLabel();
        jPMarca = new javax.swing.JPanel();
        jLMarca = new javax.swing.JLabel();
        jTFMarca = new javax.swing.JTextField();
        jPProveedor = new javax.swing.JPanel();
        jLProv = new javax.swing.JLabel();
        jPLote = new javax.swing.JPanel();
        jLLote = new javax.swing.JLabel();
        jTFLote = new javax.swing.JTextField();
        jPPrecioF = new javax.swing.JPanel();
        jLPrecioF = new javax.swing.JLabel();
        jTFPrecioF = new javax.swing.JTextField();
        jDCCaduc = new com.toedter.calendar.JDateChooser();
        jPPrecioP = new javax.swing.JPanel();
        jLPrecioP = new javax.swing.JLabel();
        jLPrecioC = new javax.swing.JLabel();
        jCBProv = new javax.swing.JComboBox<>();
        jCBPrecioP = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Alta productos SOFTIPET");
        setUndecorated(true);
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(0, 35));
        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel3MouseDragged(evt);
            }
        });
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLMinimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/minimizar-icon.png"))); // NOI18N
        jLMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLMinimizarMouseClicked(evt);
            }
        });
        jPanel3.add(jLMinimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 0, -1, 40));

        jLCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/design/regreso.png"))); // NOI18N
        jLCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLCerrarMouseClicked(evt);
            }
        });
        jPanel3.add(jLCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 0, 30, 40));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 40));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel2MouseMoved(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLTitulo1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLTitulo1.setText("Alta de productos");
        jPanel2.add(jLTitulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        jBAlta.setBackground(new java.awt.Color(153, 255, 153));
        jBAlta.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBAlta.setText("Alta de producto");
        jBAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAltaActionPerformed(evt);
            }
        });
        jPanel2.add(jBAlta, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 450, -1, -1));

        jBLimpia.setBackground(new java.awt.Color(153, 153, 255));
        jBLimpia.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBLimpia.setText("Limpiar");
        jBLimpia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiaActionPerformed(evt);
            }
        });
        jPanel2.add(jBLimpia, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 490, 150, -1));

        jPNombreG.setBackground(new java.awt.Color(255, 255, 255));
        jPNombreG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPNombreG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLNombreG.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLNombreG.setText("Nombre generico:");
        jPNombreG.add(jLNombreG, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFNombreG.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFNombreG.setBorder(null);
        jTFNombreG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFNombreGActionPerformed(evt);
            }
        });
        jTFNombreG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFNombreGKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFNombreGKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFNombreGKeyTyped(evt);
            }
        });
        jPNombreG.add(jTFNombreG, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 240, 20));

        jPanel2.add(jPNombreG, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 280, 50));

        jPDesc.setBackground(new java.awt.Color(255, 255, 255));
        jPDesc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPDesc.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLDesc.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLDesc.setText("Descripci√≥n:");
        jPDesc.add(jLDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jScrollPane1.setBorder(null);

        jTADesc.setColumns(20);
        jTADesc.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTADesc.setRows(5);
        jTADesc.setBorder(null);
        jTADesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTADescKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTADescKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTADesc);

        jPDesc.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 240, -1));

        jPanel2.add(jPDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 280, 140));

        jPNombreC.setBackground(new java.awt.Color(255, 255, 255));
        jPNombreC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPNombreC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLNombreC.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLNombreC.setText("Nombre comercial:");
        jPNombreC.add(jLNombreC, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFNombreC.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFNombreC.setBorder(null);
        jTFNombreC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFNombreCKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFNombreCKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFNombreCKeyTyped(evt);
            }
        });
        jPNombreC.add(jTFNombreC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 240, 20));

        jPanel2.add(jPNombreC, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 280, 50));

        jPFechaC.setBackground(new java.awt.Color(255, 255, 255));
        jPFechaC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPFechaC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLCaduc.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLCaduc.setText("Fecha de Caducidad:");
        jPFechaC.add(jLCaduc, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jPanel2.add(jPFechaC, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, 280, 30));

        jPMarca.setBackground(new java.awt.Color(255, 255, 255));
        jPMarca.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPMarca.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLMarca.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLMarca.setText("Marca:");
        jPMarca.add(jLMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFMarca.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFMarca.setBorder(null);
        jTFMarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFMarcaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFMarcaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFMarcaKeyTyped(evt);
            }
        });
        jPMarca.add(jTFMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 240, 20));

        jPanel2.add(jPMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, 280, 50));

        jPProveedor.setBackground(new java.awt.Color(255, 255, 255));
        jPProveedor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPProveedor.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLProv.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLProv.setText("Proveedor:");
        jPProveedor.add(jLProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel2.add(jPProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 280, 30));

        jPLote.setBackground(new java.awt.Color(255, 255, 255));
        jPLote.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPLote.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLLote.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLLote.setText("Lote:");
        jPLote.add(jLLote, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFLote.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFLote.setBorder(null);
        jTFLote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFLoteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFLoteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFLoteKeyTyped(evt);
            }
        });
        jPLote.add(jTFLote, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 240, 20));

        jPanel2.add(jPLote, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 280, 50));

        jPPrecioF.setBackground(new java.awt.Color(255, 255, 255));
        jPPrecioF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPPrecioF.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLPrecioF.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLPrecioF.setText("Precio fabricante:");
        jPPrecioF.add(jLPrecioF, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jTFPrecioF.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTFPrecioF.setBorder(null);
        jTFPrecioF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFPrecioFKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFPrecioFKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFPrecioFKeyTyped(evt);
            }
        });
        jPPrecioF.add(jTFPrecioF, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 240, 20));

        jPanel2.add(jPPrecioF, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 280, 50));

        jDCCaduc.setBackground(new java.awt.Color(255, 255, 255));
        jDCCaduc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jDCCaduc.setFocusable(false);
        jDCCaduc.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jDCCaduc.setOpaque(false);
        jDCCaduc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDCCaducKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jDCCaducKeyTyped(evt);
            }
        });
        jPanel2.add(jDCCaduc, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 490, 240, 30));
        jDCCaduc.getDateEditor().addPropertyChangeListener(new PropertyChangeListener(){
            public void propertyChange(PropertyChangeEvent e) {
                //Aqu√≠ agregaremos la funcionalidad que queremos
                //por ejemplo al seleccionar una fecha le mostrare un di√°logo con la fecha de hoy
                if (jDCCaduc.getDate() == null)
                {
                    cc.cDefault(jPFechaC, jLCaduc);
                } else if (jDCCaduc.getDate() != null)
                {
                    cc.cVerde(jPFechaC, jLCaduc);

                }
            }
        });

        jPPrecioP.setBackground(new java.awt.Color(255, 255, 255));
        jPPrecioP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPPrecioP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPPrecioPMouseEntered(evt);
            }
        });
        jPPrecioP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLPrecioP.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLPrecioP.setText("Precio publico:");
        jPPrecioP.add(jLPrecioP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLPrecioC.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jPPrecioP.add(jLPrecioC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 240, 20));

        jPanel2.add(jPPrecioP, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 310, 280, 60));

        jCBProv.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCBProv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione proveedor" }));
        jCBProv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBProvItemStateChanged(evt);
            }
        });
        jCBProv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBProvActionPerformed(evt);
            }
        });
        jCBProv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCBProvKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCBProvKeyReleased(evt);
            }
        });
        jPanel2.add(jCBProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 240, 30));

        jCBPrecioP.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCBPrecioP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S/N", "10%", "20%", "30%", "40%", "50%" }));
        jCBPrecioP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBPrecioPItemStateChanged(evt);
            }
        });
        jCBPrecioP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBPrecioPActionPerformed(evt);
            }
        });
        jCBPrecioP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCBPrecioPKeyPressed(evt);
            }
        });
        jPanel2.add(jCBPrecioP, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 380, 120, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 710, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLMinimizarMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLMinimizarMouseClicked
    {//GEN-HEADEREND:event_jLMinimizarMouseClicked
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_jLMinimizarMouseClicked

    private void jLCerrarMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLCerrarMouseClicked
    {//GEN-HEADEREND:event_jLCerrarMouseClicked
        this.dispose();
        new vtnAdminMenuProductos().setVisible(true);
    }//GEN-LAST:event_jLCerrarMouseClicked

    private void jPanel3MouseDragged(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jPanel3MouseDragged
    {//GEN-HEADEREND:event_jPanel3MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_jPanel3MouseDragged

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jPanel3MousePressed
    {//GEN-HEADEREND:event_jPanel3MousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_jPanel3MousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened

        Querys q = new Querys();
        ArrayList<Object> provMap = new ArrayList<Object>();

        try {
            provMap = q.Seleccion(con, "Id_proveedor, NombreProveedor", "proveedores", "", false);

            int cont = provMap.size() / 2;
            System.out.println(cont);
            for (int i = 0; i < cont; i++) {
                jCBProv.addItem(((String) provMap.get(0)).trim().concat("." + ((String) provMap.get(1)).trim()));
                provMap.remove(0);
                provMap.remove(0);
            }
        } catch (Exception e) {
            System.out.println("Error al mapear los proveedores..." + e);
        }

        CtrlInterfaz.selecciona(jTFNombreG);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowStateChanged(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowStateChanged
    {//GEN-HEADEREND:event_formWindowStateChanged

    }//GEN-LAST:event_formWindowStateChanged

    private void jTFNombreGKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFNombreGKeyPressed
    {//GEN-HEADEREND:event_jTFNombreGKeyPressed

    }//GEN-LAST:event_jTFNombreGKeyPressed

    private void jTFNombreGKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFNombreGKeyReleased
    {//GEN-HEADEREND:event_jTFNombreGKeyReleased
        if (jTFNombreG.getText().isEmpty()) {
            cc.cDefault(jPNombreG, jTFNombreG, jLNombreG);
        } else {
            cc.cVerde(jPNombreG, jTFNombreG, jLNombreG);
            Validaciones.enter(this, evt, jTFNombreC);
        }
    }//GEN-LAST:event_jTFNombreGKeyReleased

    private void jTFNombreGKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFNombreGKeyTyped
    {//GEN-HEADEREND:event_jTFNombreGKeyTyped
        Validaciones.validaAlfabeticos(evt);
        if (jTFNombreG.getText().length() == 50) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFNombreGKeyTyped

    private void jTFNombreCKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFNombreCKeyPressed
    {//GEN-HEADEREND:event_jTFNombreCKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFNombreCKeyPressed

    private void jTFNombreCKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFNombreCKeyReleased
    {//GEN-HEADEREND:event_jTFNombreCKeyReleased
        if (jTFNombreC.getText().isEmpty()) {
            cc.cDefault(jPNombreC, jTFNombreC, jLNombreC);
        } else {
            cc.cVerde(jPNombreC, jTFNombreC, jLNombreC);
            Validaciones.enter(this, evt, jTADesc);
        }
    }//GEN-LAST:event_jTFNombreCKeyReleased

    private void jTFNombreCKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFNombreCKeyTyped
    {//GEN-HEADEREND:event_jTFNombreCKeyTyped
        Validaciones.validaAlfabeticos(evt);
        if (jTFNombreC.getText().length() == 50) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFNombreCKeyTyped

    private void jTFMarcaKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFMarcaKeyPressed
    {//GEN-HEADEREND:event_jTFMarcaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFMarcaKeyPressed

    private void jTFMarcaKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFMarcaKeyReleased
    {//GEN-HEADEREND:event_jTFMarcaKeyReleased
        if (jTFMarca.getText().isEmpty()) {
            cc.cDefault(jPMarca, jTFMarca, jLMarca);
        } else {
            cc.cVerde(jPMarca, jTFMarca, jLMarca);
            Validaciones.enter(this, evt, jDCCaduc);
        }
    }//GEN-LAST:event_jTFMarcaKeyReleased

    private void jTFMarcaKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFMarcaKeyTyped
    {//GEN-HEADEREND:event_jTFMarcaKeyTyped
        Validaciones.validaAlfabeticos(evt);
        if (jTFMarca.getText().length() == 30) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFMarcaKeyTyped

    private void jTFLoteKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFLoteKeyPressed
    {//GEN-HEADEREND:event_jTFLoteKeyPressed

    }//GEN-LAST:event_jTFLoteKeyPressed

    private void jTFLoteKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFLoteKeyReleased
    {//GEN-HEADEREND:event_jTFLoteKeyReleased
        if (jTFLote.getText().isEmpty()) {
            cc.cDefault(jPLote, jTFLote, jLLote);
        } else {
            cc.cVerde(jPLote, jTFLote, jLLote);
            Validaciones.enter(this, evt, jTFPrecioF);
        }
    }//GEN-LAST:event_jTFLoteKeyReleased

    private void jTFLoteKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFLoteKeyTyped
    {//GEN-HEADEREND:event_jTFLoteKeyTyped
        Validaciones.validaAlfanumerico(evt);
        if (jTFLote.getText().length() == 15) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFLoteKeyTyped

    private void jTFPrecioFKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFPrecioFKeyPressed
    {//GEN-HEADEREND:event_jTFPrecioFKeyPressed
        DecimalFormat formato1 = new DecimalFormat("#.0");
        float N = 0;
        float porF;

        if (!jTFPrecioF.getText().isEmpty()) {
            N = Float.parseFloat(jTFPrecioF.getText());
        }

        if (evt.getKeyChar() == '\n') {
            try {
                jTFPrecioF.setText(formato1.format(N));
            } catch (Exception e) {
                System.out.println("Error al transformar a FLOAT..." + e);
            }
            jCBPrecioP.setSelectedIndex(0);
            jLPrecioC.setText("");

        }

        if (jLPrecioF.getForeground().getRGB() == Color.BLACK.getRGB()) {
            jLPrecioP.setForeground(Color.BLACK);
            jLPrecioC.setText("");
            jCBPrecioP.setSelectedIndex(0);
        }

    }//GEN-LAST:event_jTFPrecioFKeyPressed

    private void jTFPrecioFKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFPrecioFKeyReleased
    {//GEN-HEADEREND:event_jTFPrecioFKeyReleased

        if (jTFPrecioF.getText().isEmpty()) {
            cc.cDefault(jPPrecioF, jTFPrecioF, jLPrecioF);
        } else if (jTFPrecioF.getText().length() <= 6) {
            cc.cVerde(jPPrecioF, jTFPrecioF, jLPrecioF);
            Validaciones.enter(this, evt, jCBPrecioP);
        } else {
            cc.cRojo(jPPrecioF, jTFPrecioF, jLPrecioF);
        }
    }//GEN-LAST:event_jTFPrecioFKeyReleased

    private void jTFPrecioFKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFPrecioFKeyTyped
    {//GEN-HEADEREND:event_jTFPrecioFKeyTyped
        Validaciones.validaFlotantes(evt);
    }//GEN-LAST:event_jTFPrecioFKeyTyped

    private void jCBProvActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCBProvActionPerformed
    {//GEN-HEADEREND:event_jCBProvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBProvActionPerformed

    private void jCBPrecioPActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCBPrecioPActionPerformed
    {//GEN-HEADEREND:event_jCBPrecioPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBPrecioPActionPerformed

    private void jTADescKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTADescKeyReleased
    {//GEN-HEADEREND:event_jTADescKeyReleased
        if (jTADesc.getText().isEmpty()) {
            cc.cDefault(jPDesc, jTADesc, jLDesc);
        } else {
            cc.cVerde(jPDesc, jTADesc, jLDesc);
        }
    }//GEN-LAST:event_jTADescKeyReleased

    private void jTADescKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTADescKeyTyped
    {//GEN-HEADEREND:event_jTADescKeyTyped
        Validaciones.validaAlfanumerico(evt);
        if (jTADesc.getText().length() == 50) {
            evt.consume();
        }
    }//GEN-LAST:event_jTADescKeyTyped

    private void jDCCaducKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jDCCaducKeyTyped
    {//GEN-HEADEREND:event_jDCCaducKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jDCCaducKeyTyped

    private void jDCCaducKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jDCCaducKeyPressed
    {//GEN-HEADEREND:event_jDCCaducKeyPressed
        Validaciones.enter(this, evt, jCBProv);
    }//GEN-LAST:event_jDCCaducKeyPressed

    private void jCBProvKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jCBProvKeyPressed
    {//GEN-HEADEREND:event_jCBProvKeyPressed
        Validaciones.enter(this, evt, jTFLote);
    }//GEN-LAST:event_jCBProvKeyPressed

    private void jCBProvItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jCBProvItemStateChanged
    {//GEN-HEADEREND:event_jCBProvItemStateChanged
        if (jCBProv.getSelectedIndex() == 0) {
            cc.cDefault(jPProveedor, jLProv);
        } else {
            cc.cVerde(jPProveedor, jLProv);
        }
    }//GEN-LAST:event_jCBProvItemStateChanged

    private void jCBPrecioPItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jCBPrecioPItemStateChanged
    {//GEN-HEADEREND:event_jCBPrecioPItemStateChanged
        float porF;

        try {
            if (jCBPrecioP.getSelectedIndex() == 0) {
                cc.cDefault(jPPrecioP, jLPrecioP, jLPrecioC);
                jLPrecioC.setText("");
            } else if (jCBPrecioP.getSelectedIndex() == 1) {
                cc.cVerde(jPPrecioP, jLPrecioP, jLPrecioC);
                try {
                    porF = Float.parseFloat(jTFPrecioF.getText()) + (Float.parseFloat(jTFPrecioF.getText()) * (float) 0.10);
                    jLPrecioC.setText(String.valueOf(porF));
                } catch (Exception e) {
                    System.out.println("Error al cambiar precio float..." + e);
                }

            } else if (jCBPrecioP.getSelectedIndex() == 2) {
                cc.cVerde(jPPrecioP, jLPrecioP, jLPrecioC);
                porF = Float.parseFloat(jTFPrecioF.getText()) + (Float.parseFloat(jTFPrecioF.getText()) * (float) 0.20);
                jLPrecioC.setText(String.valueOf(porF));
            } else if (jCBPrecioP.getSelectedIndex() == 3) {
                cc.cVerde(jPPrecioP, jLPrecioP, jLPrecioC);
                porF = Float.parseFloat(jTFPrecioF.getText()) + (Float.parseFloat(jTFPrecioF.getText()) * (float) 0.30);
                jLPrecioC.setText(String.valueOf(porF));
            } else if (jCBPrecioP.getSelectedIndex() == 4) {
                cc.cVerde(jPPrecioP, jLPrecioP, jLPrecioC);
                porF = Float.parseFloat(jTFPrecioF.getText()) + (Float.parseFloat(jTFPrecioF.getText()) * (float) 0.40);
                jLPrecioC.setText(String.valueOf(porF));
            } else if (jCBPrecioP.getSelectedIndex() == 5) {
                cc.cVerde(jPPrecioP, jLPrecioP, jLPrecioC);
                porF = Float.parseFloat(jTFPrecioF.getText()) + (Float.parseFloat(jTFPrecioF.getText()) * (float) 0.50);
                jLPrecioC.setText(String.valueOf(porF));
            }
        } catch (Exception e) {
            System.out.println("Error al usar combobox porcentaje precio publico..." + e);
        }

    }//GEN-LAST:event_jCBPrecioPItemStateChanged

    private void jCBPrecioPKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jCBPrecioPKeyPressed
    {//GEN-HEADEREND:event_jCBPrecioPKeyPressed
        Validaciones.enter(this, evt, jBAlta);
    }//GEN-LAST:event_jCBPrecioPKeyPressed

    private void jBAltaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jBAltaActionPerformed
    {//GEN-HEADEREND:event_jBAltaActionPerformed
        Querys q = new Querys();
        ArrayList<Object> id = new ArrayList<Object>();

        if (jLNombreG.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                && jLNombreC.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                && jLDesc.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                && jLMarca.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                && jLCaduc.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                && jLProv.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                && jLLote.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                && jLPrecioF.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()
                && jLPrecioP.getForeground().getRGB() == cc.getVerdeOscuro().getRGB()) {

            try {
                id = q.Seleccion(con, "MAX(Id_medicamento)", "medicamentos", "", true);
            } catch (Exception e) {
                System.out.println("consulta max id producto erronea" + e);
            }

            int idFinal = Integer.parseInt((String) id.get(0)) + 1;

            Date fecha1 = jDCCaduc.getDate();
            DateFormat f = new SimpleDateFormat("yyyy-MM-dd");
            String fecha2 = f.format(fecha1);

            String proveedorAux = (String) jCBProv.getSelectedItem();
            String[] parts = proveedorAux.split("\\.");
            String part1 = parts[0];
            String part2 = parts[1];

            String values = "'" + idFinal + "',"
                    + "'" + jTFNombreG.getText() + "',"
                    + "'" + jTFNombreC.getText() + "',"
                    + "'" + jTADesc.getText() + "',"
                    + "'" + jTFMarca.getText() + "',"
                    + "'" + fecha2 + "',"
                    + "'" + part1 + "',"
                    + "'" + jTFLote.getText() + "',"
                    + "'" + jTFPrecioF.getText() + "',"
                    + "'" + jLPrecioC.getText() + "',"
                    + "'" + 0 + "'";

            if (Mensaje.pregunta(this, "¬øEstas seguro de dar de alta el producto?") == JOptionPane.YES_OPTION) {
                try {
                    q.Insertar(con, "medicamentos", values);
                } catch (Exception e) {
                    System.out.println("insercion erronea" + e);
                }

                Mensaje.exito(this, "Se dio de alta el producto correctamente");
                jBLimpiaActionPerformed(null);
            } else {
                Mensaje.error(this, "No se dio de alta el producto");
            }

        } else {
            Mensaje.error(this, "Verifique que todos los campos esten en verde");
        }

    }//GEN-LAST:event_jBAltaActionPerformed

    private void jBLimpiaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jBLimpiaActionPerformed
    {//GEN-HEADEREND:event_jBLimpiaActionPerformed
        CtrlInterfaz.limpia(jTFNombreG, jTFNombreC, jTADesc, jTFMarca, jDCCaduc,
                jTFLote, jTFPrecioF, jLPrecioC);
        jCBProv.setSelectedIndex(0);
        jTADesc.setText("");
        jLPrecioC.setText("");

        cc.cDefault(jPNombreG, jPNombreC, jPDesc, jPMarca, jPFechaC, jPProveedor, jPLote, jPPrecioF, jPPrecioF,
                jTFNombreC, jTFNombreG, jTADesc, jTFMarca, jTFLote, jTFPrecioF,
                jLNombreC, jLNombreG, jLDesc, jLMarca, jLCaduc, jLProv, jLPrecioP, jLPrecioF, jLPrecioC, jLLote);

        CtrlInterfaz.selecciona(jTFNombreG);
    }//GEN-LAST:event_jBLimpiaActionPerformed

    private void jPanel2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseMoved
        if (jLPrecioF.getForeground().getRGB() == Color.BLACK.getRGB()) {
            jLPrecioP.setForeground(Color.BLACK);
            jLPrecioC.setText("");
            jCBPrecioP.setSelectedIndex(0);
        }
    }//GEN-LAST:event_jPanel2MouseMoved

    private void jTFNombreGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFNombreGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFNombreGActionPerformed

    private void jCBProvKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCBProvKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBProvKeyReleased

    private void jPPrecioPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPPrecioPMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jPPrecioPMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vtnAdminMenuProductosA.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vtnAdminMenuProductosA.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vtnAdminMenuProductosA.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vtnAdminMenuProductosA.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vtnAdminMenuProductosA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlta;
    private javax.swing.JButton jBLimpia;
    private javax.swing.JComboBox<String> jCBPrecioP;
    private javax.swing.JComboBox<String> jCBProv;
    private com.toedter.calendar.JDateChooser jDCCaduc;
    private javax.swing.JLabel jLCaduc;
    private javax.swing.JLabel jLCerrar;
    private javax.swing.JLabel jLDesc;
    private javax.swing.JLabel jLLote;
    private javax.swing.JLabel jLMarca;
    private javax.swing.JLabel jLMinimizar;
    private javax.swing.JLabel jLNombreC;
    private javax.swing.JLabel jLNombreG;
    private javax.swing.JLabel jLPrecioC;
    private javax.swing.JLabel jLPrecioF;
    private javax.swing.JLabel jLPrecioP;
    private javax.swing.JLabel jLProv;
    private javax.swing.JLabel jLTitulo1;
    private javax.swing.JPanel jPDesc;
    private javax.swing.JPanel jPFechaC;
    private javax.swing.JPanel jPLote;
    private javax.swing.JPanel jPMarca;
    private javax.swing.JPanel jPNombreC;
    private javax.swing.JPanel jPNombreG;
    private javax.swing.JPanel jPPrecioF;
    private javax.swing.JPanel jPPrecioP;
    private javax.swing.JPanel jPProveedor;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTADesc;
    private javax.swing.JTextField jTFLote;
    private javax.swing.JTextField jTFMarca;
    private javax.swing.JTextField jTFNombreC;
    private javax.swing.JTextField jTFNombreG;
    private javax.swing.JTextField jTFPrecioF;
    // End of variables declaration//GEN-END:variables
}
